@using QuickReading.Models.Models.Games.GuessLetter
@model GuessLetterModel

<form action="@Url.Action("EndFindLetterGame","Games")" method="post">
    <h3>To find: <span id="countLetters">@Model.CountSearchLetter</span></h3>
    <h4>
        Time: <span id="minutes"></span>:<span id="seconds"></span>
    </h4>

    <br />
    <div class="div-table">
        @for (int i = 0; i < Model.ArraySize; i++)
        {
            <div class="div-table-row">
                @for (int j = 0; j < Model.ArraySize; j++)
                {
                    <div class="div-table-col-guess">@Model.ArrayLetter[i, j]</div>
                }
            </div>
        }
    </div>

    <input type="text" id="inputLetter" /> <button type="button" id="checkButton">Check</button>

    <input type="hidden" id="minutespost" name="minutes" />
    <input type="hidden" id="secondspost" name="seconds" />
    <input type="hidden" id="numberLetterpost" name="numberLetters" value="@Model.CountSearchLetter" />
    <input type="hidden" id="arraySize" name="arraySize" value="@Model.ArraySize" />
    <div class="endGame">
        <button type="submit" class="btn btn-primary">Zakończ</button>
    </div>
</form>
@section Scripts {
    <script>
        var countLettersDiv = document.querySelector('#countLetters');

        $("#checkButton").click(function () {
            var checkLetter = $("#inputLetter").val();
            var searchLetter = $(".div-table-col-guess:contains('" + checkLetter + "')");
            if (searchLetter) {
                searchLetter.css("background-color", "green");
            }
            


        })

        //clearInterval(timer);
        var sec = 0;
        function pad(val) { return val > 9 ? val : "0" + val; }
        var timer = setInterval(function () {
            $("#seconds").html(pad(++sec % 60));
            $("#minutes").html(pad(parseInt(sec / 60, 10)));
        }, 1000);
    </script>
}